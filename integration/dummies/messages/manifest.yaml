domain: messages
name: messages

entity:
  schema:
    properties:
      sender: id
      text: string
      timestamp: integer
      deleted: boolean

operations:
  add:
    input:
      properties:
        sender: ~
        text: ~
        timestamp: ~
        free: boolean
        deleted: ~
      required: [ sender, text ]
    output:
      properties:
        id: ~
      required: [ id ]
    query: false
  get:
    output:
      properties:
        id: ~
        text: ~
        timestamp: ~
      required: [ id, text ]
  update:
    concurrency: none
    forward: transit
    input:
      properties:
        text: ~
  change:
    forward: update
  find:
    output: array
    query: true
  transit:
    concurrency: none
    input:
      properties:
        sender: ~
        text: ~
      required: [ sender, text ]
    output:
      properties:
        ok: string
      required: [ id, ok ]
  assign:
    input:
      text: ~

extensions:
  resources:
    /:
      query:
        criteria: deleted!=true;
        sort: timestamp:desc
      #        projection:
      #          value: [ text, sender ]
      #          allow: [ timestamp ]

      operations: [ find ]

      /:sender:
        query:
          omit:
            range: [ 1, 10 ]
          limit:
            range: [ 1, 20 ]
          sort: timestamp:desc,
        operations: [ add, find ]
        /:id:
          operations: [ get, update ]
    /bad/queries/:sender:
      query:
        criteria: deleted!=true
      operations: [ add, find ]
    /query/left/open:
      query:
        sort: ',timestamp:desc'
      operations: [ find ]
    /query/criteria/closed:
      query:
        criteria: ~
      operations: [ find ]
    /query/unsorted/list:
      operations: [ find ]


